name: CI

on:
  pull_request:
    branches: [ master, main ]

jobs:
  # Job to install dependencies and build core - this provides artifacts for other jobs
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.12.0'
        # Disable npm cache to avoid authentication issues
        # cache: 'npm'

    - name: Install dependencies
      run: |
        rm -f .npmrc
        rm -f package-lock.json
        npm config set registry https://registry.npmjs.org/
        npm config delete //registry.npmjs.org/:_authToken || true
        npm whoami || echo "Not logged in to npm (this is expected)"
        npm install --legacy-peer-deps --no-audit --no-fund --ignore-scripts --no-optional

    - name: Cache node modules and built artifacts
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          dist
          .eslintcache
        key: ${{ runner.os }}-deps-build-${{ hashFiles('package.json', 'package-lock.json', 'angular.json') }}
        restore-keys: |
          ${{ runner.os }}-deps-build-
          ${{ runner.os }}-deps-

  # Matrix job for linting each project in parallel
  lint:
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      ACTIONS_RUNNER_DEBUG: true
      ACTIONS_STEP_DEBUG: true
    strategy:
      fail-fast: false # Don't cancel other jobs if one fails
      matrix:
        # 'ddata-lib',
        # 'ddata-core',
        # 'ddata-ui',
        # 'ddata-ui-input',
        # 'ddata-ui-file',
        # 'ddata-ui-dialog',
        # 'ddata-ui-common',
        project: [
          'ddata-a11y'
        ]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.12.0'

    - name: Restore cache
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          dist
          .eslintcache
        key: ${{ runner.os }}-deps-build-${{ hashFiles('package.json', 'package-lock.json', 'angular.json') }}
        restore-keys: |
          ${{ runner.os }}-deps-build-
          ${{ runner.os }}-deps-

    - name: Run lint for ${{ matrix.project }}
      timeout-minutes: 10
      run: |
        echo "Starting lint for project: ${{ matrix.project }}"
        echo "Current working directory: $(pwd)"
        echo "Node.js version: $(node --version)"
        echo "npm version: $(npm --version)"

        if [ "${{ matrix.project }}" = "ddata-lib" ]; then
          echo "Linting ddata-lib project"
          npm run lint
        else
          echo "Linting project: ${{ matrix.project }}"
          echo "Checking project directory: projects/${{ matrix.project }}"
          if [ -d "projects/${{ matrix.project }}" ]; then
            echo "Project directory exists, starting lint..."
            npx eslint projects/${{ matrix.project }}/ --ext .ts,.html --cache --cache-location .eslintcache --no-color --timing
          else
            echo "ERROR: Project directory projects/${{ matrix.project }} not found!"
            exit 1
          fi
        fi
        echo "Lint completed successfully for ${{ matrix.project }}"

  # Matrix job for testing each project in parallel
  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Don't cancel other jobs if one fails
      matrix:
        project: [
          'ddata-lib',
          'ddata-core',
          'ddata-ui',
          'ddata-ui-input',
          'ddata-ui-file',
          'ddata-ui-dialog',
          'ddata-ui-common',
          'ddata-a11y'
        ]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.12.0'

    - name: Restore cache
      uses: actions/cache@v4
      with:
        path: |
          node_modules
          dist
          .eslintcache
        key: ${{ runner.os }}-deps-build-${{ hashFiles('package.json', 'package-lock.json', 'angular.json') }}
        restore-keys: |
          ${{ runner.os }}-deps-build-
          ${{ runner.os }}-deps-

    - name: Run tests for ${{ matrix.project }}
      run: |
        echo "Starting tests for project: ${{ matrix.project }}"
        npx ng test ${{ matrix.project }} --no-watch --browsers=ChromeHeadless
        echo "Tests completed for ${{ matrix.project }}"
      continue-on-error: true

  # Summary job that depends on all lint and test jobs
  ci-summary:
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Check all jobs status
      run: |
        echo "Lint jobs status: ${{ needs.lint.result }}"
        echo "Test jobs status: ${{ needs.test.result }}"
        if [ "${{ needs.lint.result }}" != "success" ] || [ "${{ needs.test.result }}" != "success" ]; then
          echo "Some jobs failed. Check individual job logs for details."
          exit 1
        else
          echo "All CI checks passed successfully!"
        fi
